import React, {useState, useEffect, useMemo} from 'react';
import {Input} from "antd";
import {formatNumber} from "@/utils/utils";
import {useUpdateEffect} from "ahooks";
import _ from "lodash";

const MyInputNumber = (
  {
    value,
    onChange,
    onBlur,
    ccy,
    integerLen = 18,//整数长度
    decimalLen=2, //小数长度
    showComma = false,//展示逗号
    ...restProps
  }
)=>{

  const triggerChange = changedValue => {
    onChange?.(changedValue)
  }

  const onFormatValue = (v,config)=>{
    if(!v){
      triggerChange?.(v);
      return v;
    }

    v = v.replace(/[^\d.]/g,"") //清除除了数字和点以外的字符
      .replace(/\.{2,}/g,".").replace(".","$#$").replace(/\./g,"").replace("$#$","."); //只保留第一个. 清除多余的

    const result = formatNumber(v,{ccy,integerLen,decimalLen,hasComma:false,...config});
    triggerChange?.(result);
    return result
  }

  const onInputChange = (v)=>{
    onFormatValue(v,{zeroFill: false});
  }

  const onInputBlur = (v)=>{
    if(v){
      const result = onFormatValue(v,{zeroFill: true});
      onBlur?.(result);
    }
  }

  useUpdateEffect(()=>{
    onFormatValue(value)
  },[ccy])

  const formatValue = useMemo(() => {
    if(!value) return '';
    if(!showComma) return value;
    return value.split('.').map((a,index) =>{
      if(index===0){
        return  _.toString(a).replace(/\B(?=(\d{3})+(?!\d))/g, ",")
      }else {
        return _.toString(a)
      }
    }).join('.')
  }, [value])

  return(
    <Input
      value={formatValue}
      onChange={e=>onInputChange(e.target.value)}
      onBlur={(e)=>onInputBlur(e.target.value)}
      maxLength={integerLen+decimalLen+1}
      {...restProps}
    />
  )
}

export default MyInputNumber
